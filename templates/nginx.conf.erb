<%- def path file
    "#{@template_path}/nginx/#{file}.erb"
    end
-%>

upstream <%= nginx_config_name %> {
  server unix:<%= unicorn_socket %> fail_timeout=0;
}

server {
  listen 0.0.0.0:<%= nginx_port %> default deferred;
  server_name <%= domain_name %>;
  root <%= nginx_root || "#{current_path}/public" -%>;

<%= partial path "cve-2013-4547"-%>


<%# If backend Rails process doesn't set header, then we just need to pass it. Otherwise will need to hide it. -%>
  <% if fetch(:nginx_pass_server_header,false) -%>
    server_tokens off;
    proxy_pass_header Server;
  <% end -%>

<% if nginx_redirect_on_http_x_forwarded_proto -%>
  location /healthcheck.txt {
      return 200;
  }
<% end -%>

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"'
                    '"$request_time"';

  access_log "<%= nginx_access_log -%>" main;
  error_log  "<%= nginx_error_log -%>";

location ^~ /assets/ {
    root <%= nginx_rails_public || "#{current_path}/public" -%>;
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  <% if nginx_chrome_frame %>
  add_header "X-UA-Compatible" "IE=Edge,chrome=1";
  <% end %>

  location / {
      <%= partial path "https_redirect" -%>
      try_files $uri $uri/ $uri/index.html @<%= nginx_config_name %>;
  }

  location @<%= nginx_config_name %> {

  <%= partial path "https_redirect" -%>

  <% if fetch(:enable_basic_auth,false) -%>
    auth_basic "<%= nginx_config_name -%> Restricted";
    auth_basic_user_file <%= htpasswd_file -%>;
  <% end -%>

    root <%= nginx_rails_public || "#{current_path}/public" -%>;

    proxy_pass http://<%= nginx_config_name %>;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
  }

  <% if nginx_error_pages %>
  error_page 500 502 503 504 /500.html;
  <% end %>
  client_max_body_size 4G;
  keepalive_timeout 10;
}
